set(MODULE_NAME gtest)
set(PACKAGE_NAME Gtest)

find_package(${PACKAGE_NAME})
option(USE_SYSTEM_GTEST "Use the ${MODULE_NAME} library provided by the system" ${${PACKAGE_NAME}_FOUND})

if(${USE_SYSTEM_GTEST})
    if(NOT ${${PACKAGE_NAME}_FOUND})
        MESSAGE(FATAL_ERROR "Could NOT find ${MODULE_NAME}")
    endif()
else()
    MESSAGE(STATUS " -> Using latest upstream version of ${PACKAGE_NAME} instead")

    include(ExternalProject)

    set(INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/${MODULE_NAME})

    ExternalProject_Add(${PACKAGE_NAME}
        PREFIX ${MODULE_NAME}
        GIT_REPOSITORY https://github.com/google/googletest.git
        CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=Release -DBUILD_GMOCK=OFF -DBUILD_GTEST=ON -DBUILD_SHARED_LIBS=OFF -DINSTALL_GMOCK=OFF -DINSTALL_GTEST=ON -Dgmock_build_tests=OFF -Dgtest_build_samples=OFF -Dgtest_build_tests=OFF -Dgtest_disable_pthreads=OFF -Dgtest_force_shared_crt=OFF -Dgtest_hide_internal_symbols=OFF
        INSTALL_DIR ${INSTALL_DIR}
        UPDATE_COMMAND ""
        )

    set(${PACKAGE_NAME}_INCLUDE_DIRS ${INSTALL_DIR}/include)
    set(${PACKAGE_NAME}_LIBRARIES ${INSTALL_DIR}/lib/libgtest.a ${INSTALL_DIR}/lib/libgtest_main.a)
    set(${PACKAGE_NAME}_LIBRARY_DIRS ${INSTALL_DIR}/lib)
endif()

add_library(gtest INTERFACE)
target_include_directories(gtest SYSTEM INTERFACE ${${PACKAGE_NAME}_INCLUDE_DIRS})
target_link_libraries(gtest INTERFACE ${${PACKAGE_NAME}_LIBRARIES})

if(NOT ${USE_SYSTEM_BENCHMARK})
    add_dependencies(gtest ${PACKAGE_NAME})
endif()
